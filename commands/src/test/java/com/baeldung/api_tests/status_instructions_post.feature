# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /status/instructions_post for http method type POST 
# RoostTestHash=01ecada2fa
# 
# 

# ********RoostGPT********
Feature: Testing /status/instructions endpoint

Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def bearerAuth = 'Bearer ' + authToken
    * header Authorization = bearerAuth

Scenario Outline: Test POST /status/instructions with valid request body and headers
    Given path '/status/instructions'
    And request <requestBody>
    And header x-fapi-customer-ip-address = <customerIpAddress>
    And header x-fapi-auth-date = <authDate>
    And header x-fapi-interaction-id = <interactionId>
    And header x-idempotency-key = <idempotencyKey>
    When method post
    Then status 201
    And match response.paymentInformationStatus == '#["ACSC", "RJCT", "ACCP", "ACSP"]'
    And match response.processResult.responseCode == '#["00", "99"]'
    And match response.transactionIdentification != null

    Examples:
        | requestBody                                                                                                                               | customerIpAddress | authDate                           | interactionId                         | idempotencyKey |
        | { "merchantInstructionIdentification": "123456", "creditorAccount": {"bankCode": "123", "accountIdentification": "ACC123456", "currency": "USD"} } | '192.168.1.1'     | 'Sun, 10 Sep 2017 19:43:31 UTC'    | '550e8400-e29b-41d4-a716-446655440000' | 'abc123'       |

Scenario: Test POST /status/instructions with missing required headers
    Given path '/status/instructions'
    And request
    """
    {
      "merchantInstructionIdentification": "123456",
      "creditorAccount": {
        "bankCode": "123",
        "accountIdentification": "ACC123456",
        "currency": "USD"
      }
    }
    """
    When method post
    Then status 400
    And match response.errors contains { code: '#regex [\\s\\S]*' }

Scenario: Test POST /status/instructions with invalid Authorization header
    Given path '/status/instructions'
    And request
    """
    {
      "merchantInstructionIdentification": "123456",
      "creditorAccount": {
        "bankCode": "123",
        "accountIdentification": "ACC123456",
        "currency": "USD"
      }
    }
    """
    And header Authorization = 'InvalidToken'
    When method post
    Then status 401

Scenario: Test POST /status/instructions with authentication failure
    Given path '/status/instructions'
    And request
    """
    {
      "merchantInstructionIdentification": "123456",
      "creditorAccount": {
        "bankCode": "123",
        "accountIdentification": "ACC123456",
        "currency": "USD"
      }
    }
    """
    And header Authorization = 'Bearer invalid_token'
    When method post
    Then status 403

Scenario: Test POST /status/instructions with not found resource
    Given path '/status/nonexistent'
    And request
    """
    {
      "merchantInstructionIdentification": "123456",
      "creditorAccount": {
        "bankCode": "123",
        "accountIdentification": "ACC123456",
        "currency": "USD"
      }
    }
    """
    When method post
    Then status 404

Scenario: Test POST /status/instructions with method not allowed
    Given path '/status/instructions'
    When method get
    Then status 405

Scenario: Test POST /status/instructions with unsupported media type
    Given path '/status/instructions'
    And request
    """
    {
      "merchantInstructionIdentification": "123456",
      "creditorAccount": {
        "bankCode": "123",
        "accountIdentification": "ACC123456",
        "currency": "USD"
      }
    }
    """
    And header 'Content-Type' = 'application/xml'
    When method post
    Then status 415

Scenario: Test POST /status/instructions with server error
    Given path '/status/instructions'
    And request
    """
    {
      "merchantInstructionIdentification": "invalid",
      "creditorAccount": {
        "bankCode": "000",
        "accountIdentification": "INVALID",
        "currency": "XYZ"
      }
    }
    """
    When method post
    Then status 500
