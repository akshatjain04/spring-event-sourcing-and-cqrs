# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /status/authorisations_post for http method type POST 
# RoostTestHash=f4001afc3c
# 
# 

# ********RoostGPT********
Feature: Fulfilment endpoints for /status/authorisations API

  Background: 
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get authorisation status with valid request
    Given path '/status/authorisations'
    And header Authorization = 'Bearer ' + authToken
    And header x-fapi-customer-ip-address = <customerIpAddress>
    And header x-fapi-auth-date = <authDate>
    And header x-fapi-interaction-id = <interactionId>
    And header x-idempotency-key = <idempotencyKey>
    And request 
    """
    <requestBody>
    """
    When method POST
    Then status 201
    And match response contains { processResult: '#object', mandateIdentification: '#string', mandateStatus: '#string' }

    Examples:
      | customerIpAddress | authDate                   | interactionId                         | idempotencyKey | requestBody                                                                                                                                 |
      | '192.168.1.1'     | 'Sun, 10 Sep 2017 19:43:31 UTC' | '3fa85f64-5717-4562-b3fc-2c963f66afa6' | 'LbGpjj8KaH5wrEfg' | { "merchantRequestIdentification": "1234567890", "creditorAccount": { "bankCode": "123", "accountIdentification": "ABC123", "currency": "USD", "accountSchemeName": "BBAN", "accountSubType": "CACC" } } |

  Scenario: Get authorisation status with missing required headers
    Given path '/status/authorisations'
    And header Authorization = 'Bearer ' + authToken
    And request 
    """
    { "merchantRequestIdentification": "1234567890", "creditorAccount": { "bankCode": "123", "accountIdentification": "ABC123", "currency": "USD" } }
    """
    When method POST
    Then status 400
    And match response contains { errors: '#array' }

  Scenario: Get authorisation status with invalid request body
    Given path '/status/authorisations'
    And header Authorization = 'Bearer ' + authToken
    And header x-idempotency-key = 'LbGpjj8KaH5wrEfg'
    And request 
    """
    { "merchantRequestIdentification": "", "creditorAccount": { "bankCode": "123", "accountIdentification": "ABC123", "currency": "USD" } }
    """
    When method POST
    Then status 400
    And match response contains { errors: '#array' }

  Scenario: Get authorisation status with invalid authentication
    Given path '/status/authorisations'
    And header Authorization = 'Bearer invalidtoken'
    And header x-idempotency-key = 'LbGpjj8KaH5wrEfg'
    And request 
    """
    { "merchantRequestIdentification": "1234567890", "creditorAccount": { "bankCode": "123", "accountIdentification": "ABC123", "currency": "USD" } }
    """
    When method POST
    Then status 401
    And match response contains { errors: '#array' }

  Scenario: Get authorisation status for non-existing resource
    Given path '/status/authorisations/nonexistent'
    And header Authorization = 'Bearer ' + authToken
    And header x-idempotency-key = 'LbGpjj8KaH5wrEfg'
    And request 
    """
    { "merchantRequestIdentification": "1234567890", "creditorAccount": { "bankCode": "123", "accountIdentification": "ABC123", "currency": "USD" } }
    """
    When method POST
    Then status 404
    And match response contains { errors: '#array' }

  Scenario: Attempt to use unsupported HTTP method
    Given path '/status/authorisations'
    And header Authorization = 'Bearer ' + authToken
    And request 
    """
    { "merchantRequestIdentification": "1234567890", "creditorAccount": { "bankCode": "123", "accountIdentification": "ABC123", "currency": "USD" } }
    """
    When method GET
    Then status 405
    And match response contains { errors: '#array' }
