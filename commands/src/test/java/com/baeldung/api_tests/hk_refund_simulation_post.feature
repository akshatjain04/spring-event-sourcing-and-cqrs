# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /hk/refund/simulation_post for http method type POST 
# RoostTestHash=8f41f0dbce
# 
# 

# ********RoostGPT********
Feature: Hong Kong FPS Refund Simulation API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']

Scenario Outline: Test POST /hk/refund/simulation with valid request body and headers
  Given path '/hk/refund/simulation'
  And header Content-Type = 'application/json'
  And header message_encrypt = false
  And header Authorization = 'Bearer ' + authToken
  And request 
  """
  <requestBody>
  """
  When method post
  Then status 200
  And match response.api_gw.messageId != null
  And match response.api_gw.returnCode == '200'
  And match response.api_gw.returnReason != null
  And match response.api_gw.sentTime != null
  And match response.api_gw.responseTime != null
  And match response.response.bankTxnId != null
  And match response.response.proCode != null
  And match response.response.proMsg != null

  Examples:
    | requestBody |
    | { "txnRef": "0002900F06457710500000001", "merId": "H099289H4410000", "bankTxnId": "H099289H4410000", "txnAmt": 5000, "refundAmt": 4000, "notifyUrl": "https://merchant.com/returnRefundStatus" } |

Scenario Outline: Test POST /hk/refund/simulation with invalid request body
  Given path '/hk/refund/simulation'
  And header Content-Type = 'application/json'
  And header message_encrypt = false
  And header Authorization = 'Bearer ' + authToken
  And request 
  """
  <requestBody>
  """
  When method post
  Then status 400
  And match response.api_gw.messageId != null
  And match response.api_gw.returnCode == '400'
  And match response.api_gw.returnReason != null
  And match response.api_gw.sentTime != null
  And match response.api_gw.responseTime != null

  Examples:
    | requestBody |
    | { "txnRef": "", "merId": "H099289H4410000", "bankTxnId": "H099289H4410000", "txnAmt": 5000, "refundAmt": 4000, "notifyUrl": "https://merchant.com/returnRefundStatus" } |
    | { "txnRef": "0002900F06457710500000001", "merId": "", "bankTxnId": "H099289H4410000", "txnAmt": 5000, "refundAmt": 4000, "notifyUrl": "https://merchant.com/returnRefundStatus" } |

Scenario: Test POST /hk/refund/simulation with missing authorization header
  Given path '/hk/refund/simulation'
  And header Content-Type = 'application/json'
  And header message_encrypt = false
  And request 
  """
  { "txnRef": "0002900F06457710500000001", "merId": "H099289H4410000", "bankTxnId": "H099289H4410000", "txnAmt": 5000, "refundAmt": 4000, "notifyUrl": "https://merchant.com/returnRefundStatus" }
  """
  When method post
  Then status 403

Scenario: Test POST /hk/refund/simulation when API endpoint is not found
  Given path '/hk/refund/nonexistent'
  And header Content-Type = 'application/json'
  And header message_encrypt = false
  And header Authorization = 'Bearer ' + authToken
  And request 
  """
  { "txnRef": "0002900F06457710500000001", "merId": "H099289H4410000", "bankTxnId": "H099289H4410000", "txnAmt": 5000, "refundAmt": 4000, "notifyUrl": "https://merchant.com/returnRefundStatus" }
  """
  When method post
  Then status 404

Scenario: Test POST /hk/refund/simulation with server error
  Given path '/hk/refund/simulation'
  And header Content-Type = 'application/json'
  And header message_encrypt = false
  And header Authorization = 'Bearer ' + authToken
  And request 
  """
  { "txnRef": "0002900F06457710500000001", "merId": "H099289H4410000", "bankTxnId": "H099289H4410000", "txnAmt": 5000, "refundAmt": 4000, "notifyUrl": "https://merchant.com/returnRefundStatus" }
  """
  And header X-Force-Response-Code = 500
  When method post
  Then status 500
