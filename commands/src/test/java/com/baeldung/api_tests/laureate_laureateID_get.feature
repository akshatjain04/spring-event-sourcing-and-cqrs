# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /laureate/{laureateID}_get for http method type GET 
# RoostTestHash=3a8d014c99
# 
# 

# ********RoostGPT********
Feature: Nobel Prize Laureate Information Retrieval

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * def authToken = karate.properties['AUTH_TOKEN']
  * header Authorization = 'Bearer ' + authToken

Scenario Outline: Retrieve information for a specific Nobel Prize Laureate by ID
  Given url urlBase + '/2.1/laureate/<laureateID>'
  When method get
  Then status 200
  And match response == <expectedResponse>

  Examples:
    | laureateID | expectedResponse                                                                                      |
    | 123        | { 'id': 123, 'laureateIfPerson': { 'knownName': {'en': 'English'}, 'gender': 'female' }, 'nobelPrizes': [{}] } |
    | 456        | { 'id': 456, 'laureateIfPerson': { 'knownName': {'en': 'English'}, 'gender': 'male' }, 'nobelPrizes': [{}] }   |

Scenario: Attempt to retrieve information with invalid ID
  Given url urlBase + '/2.1/laureate/0'
  When method get
  Then status 400
  And match response.code == '404'
  And match response.message == 'There is not Laureate born that date'

Scenario: Retrieve information for a non-existent Nobel Prize Laureate
  Given url urlBase + '/2.1/laureate/999999'
  When method get
  Then status 404
  And match response.code == '404'
  And match response.message == 'There is not Laureate born that date'

Scenario: Retrieve information for a Nobel Prize Laureate with unprocessable entity
  Given url urlBase + '/2.1/laureate/abc'
  When method get
  Then status 422
  And match response.code == '404'
  And match response.message == 'There is not Laureate born that date'
