# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=4940f5c55b
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API Feature

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * header Authorization = 'Bearer ' + authToken

Scenario Outline: Get Nobel Prizes with various query parameters
  Given path '/2.1/nobelPrizes'
  And param offset = <offset>
  And param limit = <limit>
  And param sort = <sort>
  And param nobelPrizeYear = <nobelPrizeYear>
  And param yearTo = <yearTo>
  And param nobelPrizeCategory = <nobelPrizeCategory>
  And param format = <format>
  And param csvLang = <csvLang>
  When method get
  Then status 200
  And assert response.nobelPrizes != null
  And match each response.nobelPrizes[*].awardYear == '#number'
  And match each response.nobelPrizes[*].category.en == '#string'
  And match each response.nobelPrizes[*].dateAwarded == '#regex\\d{4}-\\d{2}-\\d{2}'
  And match each response.nobelPrizes[*].prizeAmount == '#number'
  And match each response.nobelPrizes[*].laureates[*].id == '#number'

  Examples:
    | offset | limit | sort | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang |
    | 1      | 5     | asc  | 2000           | 2020   | che                | json   | en      |
    | 1      | 10    | desc | 1990           | 2000   | lit                | json   | en      |
    | 2      | 3     | asc  | 2010           | 2012   | med                | json   | en      |

Scenario: Get Nobel Prizes without query parameters
  Given path '/2.1/nobelPrizes'
  When method get
  Then status 200
  And assert response.nobelPrizes != null

Scenario: Get Nobel Prizes with invalid parameters
  Given path '/2.1/nobelPrizes'
  And param offset = 'invalid'
  When method get
  Then status 400

Scenario: Get Nobel Prizes with non-existing resource
  Given path '/2.1/nobelPrizes'
  And param nobelPrizeYear = 1800
  When method get
  Then status 404

Scenario: Get Nobel Prizes with semantic errors in parameters
  Given path '/2.1/nobelPrizes'
  And param nobelPrizeCategory = 'unknown'
  When method get
  Then status 422
