# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=adfce3f1d2
# 
# 

# ********RoostGPT********
Feature: Nobel Prize Information Retrieval

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']

Scenario Outline: Get information about a specific Nobel Prize by category and year
  Given path '2.1/nobelPrize', '<category>', '<year>'
  And header Authorization = 'Bearer ' + authToken
  When method get
  Then status 200
  And assert response.nobelPrize != null
  And match response.nobelPrize contains { awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#object', laureates: '#array' }
  And match each response.nobelPrize.laureates contains { id: '#number', name: '#object', portion: '#string', sortOrder: '#string', motivation: '#object', links: '#array' }

  Examples:
    | category | year |
    | 'che'    | 2001 |
    | 'eco'    | 2005 |
    | 'lit'    | 2010 |
    | 'pea'    | 2015 |
    | 'phy'    | 2020 |
    | 'med'    | 1999 |

Scenario: Bad request when invalid category is provided
  Given path '2.1/nobelPrize', 'invalid', '2000'
  And header Authorization = 'Bearer ' + authToken
  When method get
  Then status 400
  And match response == { code: '404', message: 'There is not Laureate born that date' }

Scenario: Not Found when non-existent year is provided
  Given path '2.1/nobelPrize', 'che', '1899'
  And header Authorization = 'Bearer ' + authToken
  When method get
  Then status 404
  And match response == { code: '404', message: 'There is not Laureate born that date' }

Scenario: Unprocessable Entity when semantic errors are present in the request
  Given path '2.1/nobelPrize', 'che', 'abcd'
  And header Authorization = 'Bearer ' + authToken
  When method get
  Then status 422
  And match response == { code: '404', message: 'There is not Laureate born that date' }
