# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /direct-debit-consents_post for http method type POST 
# RoostTestHash=c62c46b328
# 
# 

# ********RoostGPT********
Feature: Real-time Direct Debit Consent Setup

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header Authorization = 'Bearer ' + authToken
    * header Content-Type = 'application/json'
    * header x-fapi-auth-date = 'Sun, 10 Sep 2017 19:43:31 UTC'
    * header x-fapi-customer-ip-address = '169.254.169.254'
    * header x-fapi-interaction-id = 'unique-interaction-id'
    * header Accept-Language = 'en-HK'

  Scenario Outline: Create a valid direct debit consent with various permissions
    Given path '/direct-debit-consents'
    And request 
    """
    { 
      "data": { 
        "permissions": <permissions>, 
        "expirationDate": "<expirationDate>" 
      } 
    }
    """
    When method POST
    Then status 201
    And match responseHeaders contains { 'x-fapi-interaction-id': '#string' }
    And match response == 
    """
    { 
      "data": { 
        "consentId": "#string", 
        "creationDate": "#string", 
        "status": "PendingAuthorise", 
        "statusUpdateDate": "#string", 
        "permissions": <permissions>, 
        "expirationDate": "#string" 
      }, 
      "links": { 
        "self": "#string" 
      } 
    }
    """

    Examples:
      | permissions                                                                                     | expirationDate          |
      | ['RealTimeDirectDebitSetup']                                                                    | '2023-12-31T23:59:59Z'  |
      | ['RealTimeDirectDebitSetup', 'RealTimeDirectDebitOtpConfirmation']                             | '2023-12-31T23:59:59Z'  |
      | ['RealTimeDirectDebitSetup', 'RealTimeDirectDebitOtpConfirmation', 'RealTimeDirectDebitStatusInstructions'] | '2023-12-31T23:59:59Z'  |

  Scenario Outline: Create a direct debit consent with invalid permissions
    Given path '/direct-debit-consents'
    And request 
    """
    { 
      "data": { 
        "permissions": <permissions>, 
        "expirationDate": "2023-12-31T23:59:59Z" 
      } 
    }
    """
    When method POST
    Then status 400
    And match responseHeaders contains { 'x-fapi-interaction-id': '#string' }
    And match response.errors[0] contains { code: '#string', causes: '#string' }

    Examples:
      | permissions    |
      | ['Invalid']    |
      | []             |
      | ['']           |

  Scenario: Create a direct debit consent without authorization token
    * header Authorization = null
    Given path '/direct-debit-consents'
    And request 
    """
    { 
      "data": { 
        "permissions": ["RealTimeDirectDebitSetup"], 
        "expirationDate": "2023-12-31T23:59:59Z" 
      } 
    }
    """
    When method POST
    Then status 401
    And match responseHeaders contains { 'x-fapi-interaction-id': '#string' }

  Scenario: Create a direct debit consent with unsupported Content-Type
    * header Content-Type = 'text/plain'
    Given path '/direct-debit-consents'
    And request 
    """
    { 
      "data": { 
        "permissions": ["RealTimeDirectDebitSetup"], 
        "expirationDate": "2023-12-31T23:59:59Z" 
      } 
    }
    """
    When method POST
    Then status 415
    And match responseHeaders contains { 'x-fapi-interaction-id': '#string' }

  Scenario: Attempt to create a direct debit consent with GET method
    Given path '/direct-debit-consents'
    When method GET
    Then status 405
    And match responseHeaders contains { 'x-fapi-interaction-id': '#string' }

  Scenario: Attempt to create a direct debit consent with DELETE method
    Given path '/direct-debit-consents'
    When method DELETE
    Then status 405
    And match responseHeaders contains { 'x-fapi-interaction-id': '#string' }
