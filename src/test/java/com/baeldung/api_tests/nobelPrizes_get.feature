# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=4940f5c55b
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API Feature

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * header Authorization = 'Bearer ' + authToken

Scenario Outline: Get Nobel Prizes with various query parameters
  Given path '/2.1/nobelPrizes'
  And param offset = <offset>
  And param limit = <limit>
  And param sort = <sort>
  And param nobelPrizeYear = <nobelPrizeYear>
  And param yearTo = <yearTo>
  And param nobelPrizeCategory = <nobelPrizeCategory>
  And param format = <format>
  And param csvLang = <csvLang>
  When method get
  Then status 200
  And match response.nobelPrizes[*].awardYear exists
  And match response.nobelPrizes[*].category.en exists
  And match response.$.links[*].self exists

  Examples:
    | offset | limit | sort | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang |
    | 1      | 5     | 'asc' | 2000           | 2005   | 'che'              | 'json' | 'en'    |
    | 2      | 10    | 'desc' | 2010          | 2012   | 'lit'              | 'json' | 'en'    |

Scenario: Get Nobel Prizes without any query parameters
  Given path '/2.1/nobelPrizes'
  When method get
  Then status 200
  And match response.nobelPrizes[*].awardYear exists
  And match response.$.links[*].self exists

Scenario: Get Nobel Prizes with invalid parameters resulting in Bad Request
  Given path '/2.1/nobelPrizes'
  And param offset = -1
  When method get
  Then status 400
  And match response.code == '404'
  And match response.message == 'There is not Laureate born that date'

Scenario: Get Nobel Prizes with out of range year resulting in Unprocessable Entity
  Given path '/2.1/nobelPrizes'
  And param nobelPrizeYear = 1800
  When method get
  Then status 422
  And match response.code == '404'
  And match response.message == 'There is not Laureate born that date'
